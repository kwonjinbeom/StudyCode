
다음과 같은 기능을 수행할 수 있는 Spring MVC Project를 작성하려고 한다.
제시된 조건을 활용하여 요구사항을 충족할 수 있는 코드를 작성하고 프로젝트 구조를 캡처하여 첨부하시오. 

[전제 조건]

- 스프링부트 즉 스프링 스타터로 생성하면 안되고 스프링 레거시 프로젝트로 생성하여야 합니다.
- root-context.xml 문서에 명시된 사용자를 생성해야 한다. 

[기능]

- 프로젝트 실행 시 로그인 화면이 나타남
- 알맞은 아이디, 비밀번호 입력 시 로그인 입력창이 사라지며 "[회원명]님 환영합니다." 문구 출력
- 잘못된 아이디, 비밀번호 입력 시 "로그인 실패" 경고창 출력

[요구 사항]

1. 프로젝트에 사용할 라이브러리를 pom.xml을 이용하여 추가(mavenrepository 이용) o
- ojdbc8 (version : 21.1.0.0) 
- mybatis (version : 3.5.6)
- mybatis-spring (version : 2.0.6)
- spring-jdbc (version : 5.2.11.RELEASE) o
- commons-dbcp (version : 1.4)
- 서블릿과 JSP 파일 버전 변경

<!-- https://mvnrepository.com/artifact/org.springframework/spring-jdbc -->
<dependency>
    <groupId>org.springframework</groupId>
    <artifactId>spring-jdbc</artifactId>
    <version>5.2.11.RELEASE</version>
</dependency>

<dependency>
    <groupId>commons-dbcp</groupId>
    <artifactId>commons-dbcp</artifactId>
    <version>1.4</version>
</dependency>

2. MemberController 클래스 작성
1) 로그인 요청 URL을 매핑하여 서비스 호출 및 뷰 연결처리를 하는 메소드
   public String memberLogin() 작성.
   (매개변수는 자유롭게 선언, 반환값은 return "redirect:/";)

2) Session 생성(loginUser)

3. MemberService 인터페이스, MemberServiceImpl 클래스 작성

4. MemberDAO 인터페이스 작성

5. mybatis-config.xml 작성
1) Member 클래스의 별칭을 Member로 지정
2) member-mapper.xml 파일을 mapper로 등록

6. member-mapper.xml 작성
1) VO 클래스와 Member 테이블 조회 결과를 매핑할 resultMap 작성 (id="memberResultSet")
2) 로그인 기능을 수행하기 위한 select 엘리먼트 작성 (id="loginMember)


[조건]
- 프로젝트명 : ncsTest1
- 최상위 패키지 : com.ncs.test

- 테이블 & 샘플데이터
CREATE TABLE MEMBER(
	MEMBER_ID VARCHAR2(30) PRIMARY KEY,
	MEMBER_PWD VARCHAR2(100) NOT NULL,
	MEMBER_NM VARCHAR2(15) NOT NULL,
	MEMBER_ENROLL_DT DATE DEFAULT SYSDATE
);

INSERT INTO MEMBER VALUES('user01', 'pass01', '홍길동', DEFAULT);


- 인터페이스 생성

com.ncs.test.member.model.service.MemberService

com.ncs.test.member.model.dao.MemberDAO


- 클래스 생성

com.ncs.test.member.controller.MemberController

com.ncs.test.member.model.service.MemberServiceImpl (MemberService 구현)

com.ncs.test.member.model.dao.MemberDAOImpl (MemberDAO 구현)

com.ncs.test.member.model.vo.Member

- 위 Member 클래스의 필드 (lombok 이용)

private String memberId;
private String memberPwd;
private String memberName;
private Date memberEnrollDate; // (import : java.sql.Date)

- src/main/resources 폴더에 mybatis 관련 설정 파일 추가

mybatis-config.xml

mappers/member-mapper.xml

-------------------- web.xml 수정 및 추가 내용 --------------------
<web-app version="4.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns="http://xmlns.jcp.org/xml/ns/javaee" 
	xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd">


<!-- welcome-file 설정 -->
<welcome-file-list>
	<welcome-file>index.jsp</welcome-file>
</welcome-file-list>

<!-- 문자 인코딩 필터 설정 -->
<filter>
	<filter-name>encodingFilter</filter-name>
	<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
	<init-param>
		<param-name>encoding</param-name>
		<param-value>utf-8</param-value>
	</init-param>
	<init-param>
		<param-name>forceEncoding</param-name>
		<param-value>true</param-value>
	</init-param>
</filter>
<filter-mapping>
    <filter-name>encodingFilter</filter-name>
	<url-pattern>/*</url-pattern>
</filter-mapping>


-------------------- pom.xml 추가/수정 내용 --------------------

<!-- Java, SpringFramework 버전 수정 -->

<properties>
	<java-version>1.11</java-version>
	<org.springframework-version>5.2.11.RELEASE</org.springframework-version>
	<org.aspectj-version>1.6.10</org.aspectj-version>
	<org.slf4j-version>1.6.6</org.slf4j-version>
</properties>

-------------------- root-context.xml 추가 --------------------

<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
	<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver"/>
	<property name="url" value="jdbc:oracle:thin:@localhost:1521/xepdb1"/>
	<property name="username" value="ncsUser"/>
	<property name="password" value="ncsUser"/>
	<property name="defaultAutoCommit" value="true"/>
</bean>	
	
<bean id="sqlSessionFactoryBean" class="org.mybatis.spring.SqlSessionFactoryBean">
	<property name="configLocation" value="classpath:mybatis-config.xml"/>
	<property name="dataSource" ref="dataSource"/>
</bean>

<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
	<constructor-arg ref="sqlSessionFactoryBean"/>
</bean>

-------------------- mybatis-config.xml --------------------

<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE configuration PUBLIC "-//mybatis.org//DTD Config 3.0//EN" "http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>

	<settings>
		<setting name="jdbcTypeForNull" value="NULL"/>
	</settings>

	<!-- 5-2) member-mapper.xml 파일을 mapper로 등록  -->
	<mappers>
		<mapper resource="xml파일이존재하는폴더명/xml파일" />
	</mappers>

</configuration>



xml--
<resultMap type="Member" id="memberResultSet">
	<result column="member_id" property ="memberId" />
	<result column="member_nm" property ="memberName" />
	<result column="member_enroll_dt" property ="memberEnrollDate" />
</resultMap>

<select id ="loginMember" parmeterType="Member" resultMap="memberResultSet">
	select member_id, member_nm, member_enroll_dt
	~~
	where ~~{} {}
</select>

controll--
@Controller
@SessionAttributes("loginMember")
~~
postmapping
memberLogin(Member member, HttpSession session, RedirectAttributes ras){
Member membresult = sevice. loginemmber(mdfl);
if(memberresult != null){
	model.addAttribute("loginMember", memberresult");
else{
	ras.addFlshattribe("msG,"로그인실패
	return "redirect:/";
}
}

}


-------------------- MemberDAOImpl.java(MemberDAO의 구현 클래스) --------------------
중략...

@Repository
public class MemberDAOImpl implements MemberDAO {

	@Setter(onMethod_ = @Autowired)
	private SqlSession sqlSession;
	
	// 인터페이스에 선언된 메서드는 재정의할 때 메서드 내부에 다음과 같이 작성하면 된다.
	// 타입 참조변수 = sqlSession.selectOne("select의 id명", 매개변수명);
	// return 참조변수;
	
}

@Repository

@Setter(onMethod_ = @Autowired)
private SqlSession sqlSession
public Member loginMember(Member member){
Member memberResult = sqlSession.selectOne("loginMember", member);
return memberResult;}

-------------------- index.jsp --------------------

<%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%>
<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core"%>

<!DOCTYPE html>

<html>

<head>

<meta charset="UTF-8">

<title>로그인 테스트</title>

</head>

<body>

<c:if test="${!empty msg}">

<script>

alert("${msg}");

<c:remove var="msg"/>

</script>

</c:if>

<c:if test="${empty loginMember}">

<form action="login" method="post">

<label> ID : </label> <input type="text" name="memberId"> <br>

<label>PWD : </label> <input type="password" name="memberPwd"> <br>

<button>로그인</button>

</form>

</c:if>

<c:if test="${!empty loginMember}">

<h3>${loginMember.memberName} 님 환영합니다.</h3>

</c:if>

</body>

</html>